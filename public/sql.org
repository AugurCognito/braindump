:PROPERTIES:
:ID:       2af7f9fe-c662-4c4d-b86a-f55b61f4577d
:END:
#+title: SQL


* SQL Syntax
:PROPERTIES:
:ID:       0a21d384-d2b5-4a45-824f-5980a1514c89
:END:
SQL uses identifiers(such as table name), keywords(such as =SELECT=), a literal(a constant such as a string or number) and special character symbols(semicolon =;= for one).
* Queries in SQL
:PROPERTIES:
:ID:       5c67ebd2-2899-4b13-ba56-e587496c39c7
:END:
Syntax is:
#+begin_src sql
    SELECT col1, col2 FROM tablename, othertablename,...
    JOIN (table3) ON ---
        WHERE queries
        GROUP BY coln
        HAVING condition
        ORDER BY coln ASC/DSC
        LIMIT limits OFFSET offset;
#+end_src

- =DISTINCT=
  removes duplicates from the columns.
  #+begin_src sql
    SELECT DISTINCT colname ---remaining query
  #+end_src
- Multiple column Order
  is possible simply by using =,= after each =coln asc/dsc=
- =AS=
  expression can be written and new column can be created
  #+begin_src sql
    SELECT col1,(col2*some operation) AS new_name --"new name" can also be used
  #+end_src
- =JOIN=
    We can join multiple tables in a database explicitly stating primary keys.
    #+begin_src sql
        SELECT col1, col2 FROM tablename
        INNER JOIN anothertablename
            ON tablename.pk = anothertablename.its_pk
    #+end_src
    We can nest joins to include multiple databases.
    #+begin_src sql
        INNER JOIN (anothertablename JOIN table3 ON (anothertablename.pk = table3.pk)) ON (tablename.pk = anothertablename.its_pk)
    #+end_src

- Aggregate Functions are used to get a single result from a range of data. PostgreSQL Aggregate Functions [[https://www.postgresql.org/docs//functions-aggregate.html][here]].
  #+begin_src sql
    SELECT func(column/expr) as name
         from tablename
    GROUP BY some_column
    HAVING group_condition;
  #+end_src
  =Group BY= can be used to get result of group of data. =HAVING= is used with =GROUP BY=, it is identical with =WHERE=.

* Data manipulation in SQL
:PROPERTIES:
:ID:       90dcef52-060a-445e-b42e-2e41e41fd721
:END:
** =INSERT= in SQL
:PROPERTIES:
:ID:       b53b8cf0-1e94-4a80-91d5-e45cfeb8ddc5
:END:
Basic syntax of =INSERT= is
#+begin_src sql
    INSERT INTO tablename
    (col1, col2,...coln)
    VALUES (value1, value2...valuen)
           (valu1, valu2,...valun)
#+end_src
Column names are optional and need not to all be in order or full list of column available to a table.
* PostgreSQL
:PROPERTIES:
:ID:       f70271fd-3e62-4e7d-afdb-237237550a61
:END
Resources:
[[https://www.crunchydata.com/developers/playground/][+ Postgresql playground]]
** =createdb= and =dropdb=
:PROPERTIES:
:ID:       22d931fe-a947-4f18-85c3-31e5d1290759
:END:
- =sudo -u <username> createdb <dbname>=
Creates a database with =dbname= name.

- =sudo -u <username> dropdb <dbname>=
Deletes database with =dbname= name.

** =sudo -u <username> psql=
:PROPERTIES:
:ID:       e6249340-499d-403b-a9b7-8836165d8f0c
:END:
Default is generally 'postgres'
*** =\dn=
To show all schemas
*** =\dt <schema_name>.*=
To show all relations of schema
* SQLite
:PROPERTIES:
:ID:       7e9f8189-b191-4614-a9ac-c7f569e456ff
:END:
